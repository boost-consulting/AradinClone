お願い：下記の全項目を実装し、最後の「受け入れ確認」まで全て合格してから完了報告をください。部分対応の中間報告は不要です。代替案がある場合も、全体整合が取れる形で提示し、受け入れ確認を全合格させてください。

指示（最終）：

A. ライトRBAC＆作業モードの厳密適用
B. 入出庫上段の「未処理出荷」「未処理仕入」並列パネルの完成
C. 仕入受入の“母数”とリストの完全連動＋自動補充予定生成
D. ダッシュボード→入出庫の遷移・再取得・通知の一貫動作

A. ライトRBAC＆作業モードの厳密適用（回帰修正）

ability の単一真理表をフロント共通で使用し、全ページで同じ判定にする。

ability = {
  canCreateShipRequest: role==='STORE',
  canConfirmShipment: role==='WAREHOUSE',
  canReceiveInbound: role==='WAREHOUSE',
  canInspectReturns: role==='WAREHOUSE',
  canSell: role==='STORE',
  canRegisterCustomerReturn: role==='STORE',
  canSendStoreReturn: role==='STORE',
}


これを入出庫ページの上段カードのボタン活性・下段タブのボタン活性の双方で参照する。

入出庫ページ（上段左の出荷カード）

倉庫モード：各行の「出荷処理」ボタンを活性。クリックで**[出荷処理]タブに遷移＆フォームにプリセット**。

店舗モード：同ボタンを非活性＋鍵アイコン＋ツールチップ（「倉庫で出荷確定します」）。

サーバ最小ガード（403）

既存エンドポイントのロールチェックを再確認：

POST /shipping/confirm は WAREHOUSE のみ。

POST /inbounds/receive は WAREHOUSE のみ。

POST /shipping/requests / POST /sales / 店舗返品系は STORE のみ。

UIが誤って活性でもサーバが確実に弾く。403はトーストで理由表示。

モード切替の徹底反映

ヘッダー「作業モード」変更時に、以下のreact-queryキー無効化→再取得を必ず実行：

入出庫上段2パネル（pending shipping / pending inbound）

入出庫下段フォームの初期化

ダッシュボードKPI・通知バッジ・右サイド履歴

B. 入出庫上段の「未処理出荷」「未処理仕入」並列パネルの完成

現状の見た目はOK。機能面を完成させる：

左パネル「未処理出荷指示」：期限フィルタ（期限切れのみ/本日/7日間/すべて）＋SKU/店舗検索。

右パネル「未処理仕入予定」：（同様に）期限フィルタ＋SKU/仕入先検索。

行クリック/ボタンで下段タブへ遷移＆完全プリセット（左→[出荷処理]、右→[仕入受入]）。

排他ルールを厳守：

少数アラート（店舗側画面やダッシュボード）は、SKU×店舗に pending の出荷指示が1件でもある間は表示しない。

shipping/shortage のAPIで LEFT JOIN により pending 存在を判定して除外。

C. 仕入受入の“母数”とリストの完全連動＋自動補充予定生成
C-1. 「母数（ダッシュボード）」と「入出庫の右パネル」の定義を一致

ダッシュボード上段「本日の仕入受入 処理済／予定数」の**「予定数」**は以下で集計：

inbound_plans の status in (pending, partially_received) かつ due_date = 今日（＋任意で期限切れ含むなら UIに表記） の件数。

入出庫右パネル「未処理仕入予定」は同じ条件（＋表示件数はページング可）。

これにより、ダッシュボードの母数 = 右パネルの件数になる。

C-2. ダッシュボード→入出庫の遷移

「本日の仕入受入（処理済/予定）」カードクリックで入出庫を開き、

**右パネルのフィルタを「本日」**にセット、

最初の行を自動フォーカス（存在する場合）。

戻る必要なくそのまま[仕入受入]タブで処理できる。

C-3. 自動補充予定生成（デモ向け）

目的：倉庫在庫が減ると「未処理仕入予定」の件数が見合って増える体験を作る。

サーバAPI：POST /api/inbounds/replenish?date=today

処理：倉庫（通常）在庫が**target（補充基準）を下回るSKU**を探し、

既に status in (pending, partially_received) の inbound_plans が無いSKUに限り、以下の1行を生成：

planned_qty = max(0, target - 現在庫)

supplier_name = 'デフォルト仕入先'（デモ固定でOK）

due_date = 今日、status = pending、memo='自動補充'

複数SKUに対し一括生成。

トリガ：

出荷確定・販売・返品検品等で倉庫在庫が減った直後に（非同期で良いので）このAPIを呼び出し、右パネルとカードの件数が増えるようにする。

入出庫右パネルに**「不足分の仕入予定を自動作成」**ミニボタン（倉庫モードのみ）も用意可。

生成後は：右パネル再取得／ダッシュボードKPI再取得／通知更新。

D. API・データ仕様（要点）

GET /api/inbounds/pending

クエリ：range=today|7d|all、include_overdue、q、limit、offset

返却：{ items:[{id, sku, productName, supplier, dueDate, plannedQty, receivedQty, remainingQty, status}], total }

range=today は due_date=今日。include_overdue=true なら due_date<=今日。

POST /api/inbounds/receive

入力：plan_id, date, good_qty, defect_qty, shelf_id, memo（すべて正の値）

挙動：在庫加算（通常/不良）→ received_qty 更新 → 残量0で completed → 履歴1行（仕入受入・予定対応）。

POST /api/inbounds/replenish?date=today（新規）

倉庫在庫 < target の SKU に対し、未作成のものだけ inbound_plans を作成。

返却：作成件数と生成された plan のID配列。

GET /api/shipping/pending / /api/shipping/shortage

既定どおり。shipping/shortage は pending 存在時は除外するSQL/ロジックを厳守。

E. UIの連動・再取得

次の書込みアクション後は、最低以下を無効化→再fetch：

ダッシュボードKPI（未処理出荷指示・本日の仕入受入・在庫少数）

入出庫上段2パネル

通知バッジ／ドロップダウン

右サイド履歴

モード切替時も同様に無効化→再fetch。

F. 受け入れ確認（すべて○で完了）

倉庫モードで出荷確定が実行可能

入出庫上段左の「出荷処理」ボタンが活性→クリックで[出荷処理]タブにプリセット→確定成功。

店舗モードでは非活性＋ツールチップ。

ダッシュボードの“本日の仕入受入（処理済/予定）”と右パネルの件数が一致

range=today 定義で齟齬が無い。カードのクリックで入出庫を開くと右パネルが“本日”フィルタで同じ件数が並ぶ。

在庫減少→自動補充予定が増える

倉庫モードで出荷確定などにより倉庫在庫を下げると、/inbounds/replenish により右パネルの未処理仕入予定とダッシュボード母数が増える（再取得済）。

右パネルの「自動作成」ボタンでも同様に作成できる（倉庫モードのみ表示）。

受入処理の一貫動作

右パネル行→[仕入受入]タブプリセット→登録で通常/不良＋、received_qty更新、残量0でcompleted→右パネルから消える。

ダッシュボードの処理済が増加、予定数が減少。履歴に1行。

少数アラート⇔処理中の出荷指示の排他

pending が存在するSKU×店舗は少数アラートに出ず、左パネル「処理中」に出る。

出荷確定で completed になると、在庫が基準以上になればアラートは出ない（不足解消）。

通知の整合

2セクション（未処理出荷・未処理仕入）が件数/中身とも更新。行クリックで入出庫該当パネルに遷移＆ハイライト。

403ガード

不正ロールでの実行はサーバ403で拒否され、トーストで理由表示。

G. 実装を軽くするヒント

自動補充は1SKU=1行で十分（多品目は複数行）。

replenish は冪等に（同SKUに既存 pending/partial があれば作らない）。

react-query はキーに mode / storeId / range を含める。モード切替や処理完了時に確実に再取得できる。

以上です。
倉庫モードで出荷確定が行えること／ダッシュボードの仕入“母数”と右パネルの未処理が常に一致すること／在庫減に応じて未処理仕入が増えることを必ず確認してください。