現在の実装で“反映済み”の点

ダッシュボード→各画面の遷移ハンドラは実装済み（Dashboard.tsxの setLocation）。

在庫一覧のセレクト初期値は空文字を使わず "all" に統一済み。

シードAPI /api/seed あり：場所／商品（※30SKUに限定）／在庫／補充基準／出荷指示／履歴の投入ロジックを実装済み。

主要な未反映・不整合（不具合の根っこ）

ユーザーがシードされていない

/api/seed は実行前提として、role='warehouse' と role='store' のユーザーが既に存在していることを要求。

現状、ユーザーの初期投入がどこにもないため、履歴や作成者ID参照でFKが崩れ、認証必須APIが401になります。

数量の符号設計がAPIとフロントで矛盾

/api/inventory/adjust は 「数量は正の値」（バリデーションでpositive）。

しかしフロント側：

販売（/api/sales）ではサーバが負の数量をadjustInventoryに渡す実装。

返品送付（店舗→倉庫）でもフロントが負の数量で「店舗側の減算」を呼び出している。

サーバの在庫更新は「fromStateを減算→toStateへ加算」という正の数量前提で組まれているため、負の値は全て逆転して破綻します。

認証フローが未接続

サーバは /api/auth/login を実装済み＆全書き込み系APIは requireAuth。

しかしUIはログイン画面を出さないまま書き込みAPIを叩く構造。結果、401で何も登録できない。

通知／履歴のUXが未完成

ヘッダーの通知バッジは**固定の「7」**で中身が出ない。

右サイド「直近の履歴」は常に /api/history?limit=20 固定で、画面文脈に応じた内容に切り替わらない。

履歴の種別表示に**「棚入れ確定」が残っており、サーバ側の種別（「棚入れ」など）と用語不一致**。

シードのSKU数が仕様より少ない

12型×色2×サイズ3＝72SKUの方針に対して、現在は30SKUのみ投入（デモなら許容だが、見映えは落ちる）。

修正指示書（Replit向け・自然言語のみ）
優先度1（ブロッカーの解消）

デモ用ユーザーの初期投入を必ず行う

role='warehouse' のユーザー（例：warehouse_user / パスワード任意）と、role='store' のユーザー（例：store_user）を最低1件ずつ作成する。

方法はどちらでもよい：

A. /api/seed の最初にユーザーが無いとき自動作成を追加する。

B. 別途 /api/seed-users を設け、最初にそれを叩く手順に固定する。

以降、履歴や出荷指示の performedBy / createdBy は必ずこのユーザーIDを参照させる（FKエラー防止）。

数量の符号ルールを統一（“正の値のみ”）

サーバ側の基準：在庫操作APIは数量は常に正の値。

販売は「減算のみ」。fromState="通常" を減らすだけで、toState に加算はしない。

実装策（どちらか）：

① adjustInventory を toState 省略可に拡張し、「fromStateが指定され toState未指定の時は減算のみ」とする。

② 既存の adjustInventory をそのまま使う場合は、**fromState=「通常」かつ toState=同一状態の時は“純減扱い（加算を行わない）”**という特則を加える。

店舗→倉庫の返品送付も「店舗で減算 → 倉庫で検品中へ加算」を二段で正の値で行う。

先に店舗の減算（fromState="通常", 減算のみ）、次に倉庫側で検品中へ加算。

フロント側の負数送信はすべて廃止（販売・返品送付とも）。

ログイン導線を最短で入れる

画面初回表示で簡易ログインUIを出すか、もしくは**自動ログイン（デモ用固定ユーザー）**を入れて、requireAuth を満たす。

成功時は全クエリを再取得して、KPI・一覧・履歴が即時に“生きる”ようにする。

優先度2（“数字が動く”最小運用）

シード実行の手順を確定

手順：ユーザー投入 → /api/seed 実行。

いまの /api/seed はユーザー存在を前提にしているので、上記の順番をUIボタンやREADMEで明記する。

SKUは30でも動くが、見映えを優先するなら72SKU投入に拡張（現状は30件に制限あり）。どちらでも可、方針を揃える。

ダッシュボードのKPI・一覧は実集計で更新されることを確認

上段カード：未処理出荷指示／本日の受入（予定・処理）／下限割れ件数／直近7日販売点数。

下段：未処理の出荷指示一覧／少数アラート詳細。

書き込み（指示作成・出荷確定・販売登録・返品）後は当該キーだけ再取得またはページ再表示で即反映。

優先度3（ワークフローの通し）

在庫一覧の「明細」モーダルは SKU×場所の履歴が必ず出る

現状の実装で取得できるので、シード後に履歴が表示されることを確認。空なら空文言でOK。

入出庫（出荷処理／受入／返品検品）

出荷確定：倉庫（通常or確保）減 → 店舗（通常）増 → 指示=完了 → 履歴追記。在庫不足時は明確なエラー。

受入→棚入れ：検品中へ加算 → 棚入れ確定で「通常」or「不良」へ振替。

返品受入・検品：検品中へ受入 → 再販可=通常、不良=不良へ確定。

販売管理（店舗）

対象店舗の在庫サマリ（通常／不良）に基づきSKUクリックでフォームに反映。

販売登録は数量＝正の値、登録後は店舗の通常が減り、**販売履歴（売上金額付き）**に出る。

出荷指示（店舗）

左の少数アラート（自店舗）から**SKUと推奨数量（基準−現在庫、負は0）**をフォームへ自動入力。

作成後、未処理一覧に反映し、ダッシュボードの未処理件数も増加。

返品管理（店舗）

顧客返品：再販可→店舗・通常＋／不良→店舗・不良＋。

倉庫返品送付：店舗・通常−（正の値・減算のみ）→ 倉庫・検品中＋ の二段処理。

優先度4（通知と履歴の体験を完成）

通知バッジを実データ化

バッジ数＝未処理の出荷指示件数。クリックで簡易リストを開き、行クリックで入出庫（出荷処理タブ）へ遷移。

未件時は「未処理の出荷指示はありません」を表示。

右サイド「直近の履歴」を画面文脈で切替

ページ（またはタブ）に応じてクエリパラメータ（例：types=受入,棚入れ,在庫確保,出荷確定 等）を付与し、内容が切り替わるようにする。

すぐに最小対応するなら、取得キーに現在のURLパスを含めて再取得でもよい。

表示用の種別名をサーバの列挙と完全一致に統一（「棚入れ確定」は廃止し「棚入れ」に揃える）。

受け入れ確認（この順で通ればOK）

ログイン（デモ用ユーザー）→ /api/seed 実行。

ダッシュボードにKPI・一覧が表示され、カード／クイックアクションで各画面へ遷移できる。

出荷指示作成 → ダッシュボードと入出庫の未処理に増加。

出荷確定 → 倉庫↓・店舗↑・指示=完了・履歴追記。

販売登録 → 店舗の通常↓・販売履歴（売上あり）。

顧客返品（再販可） → 店舗の通常↑（不良なら店舗の不良↑）。

店舗→倉庫返品送付 → 入出庫の「返品受入・検品」に到着 → 検品確定で倉庫の通常 or 不良へ。

在庫一覧「明細」 → 対象SKU×場所の履歴がモーダル表示。

通知と右サイド履歴 → 未処理件数と中身、画面ごとの履歴内容が切り替わる。