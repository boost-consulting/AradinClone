下記の指示は、機能間の整合性まで含めてセットで成立する内容です。 必ず全項目を実装し、受け入れ確認（最後のチェックリスト）をすべて合格してから「完了報告」をお願いします。 一部だけ対応した中間報告は不要です。代替案がある場合は、全体整合が取れる形で提示してください。


優先度1（ブロッカー／整合性）
1. 数量は常に“正の値”に統一（返品の符号修正を含む）
    * 現状：Returns.tsx の「店舗→倉庫返品送付」で /api/inventory/adjust に負の数量を送っている。
    * 変更：正の数量＋店舗側は“減算のみ”に変更。fromState="通常"、toStateは指定しない。
    * 倉庫側の受入は入出庫画面で行い、toState="検品中" で加算する（二段処理）。
    * 既にサーバ側は toState を optional にしているので、負数送信は全面廃止。
    * 可能ならフロントは /api/returns/ship（reduction-only）を利用し、/api/inventory/adjust へ負数を送る経路は削除。
2. ユーザーと認証の前提を固定（済の確認）
    * デモユーザー（warehouse_user／store_user_*）を必ずシードし、書込みAPIはセッションの userIdで整合。
    * 履歴 performedBy のFKエラーが再発しないこと。
3. **在庫更新＝「一体更新＋履歴1行」**を厳守
    * 出荷確定・受入→棚入れ・販売・顧客返品・店舗→倉庫返品送付・返品受入／検品すべて、在庫更新と履歴1行を不可分で実行。

優先度2（データ＆表示の正しさ）
1. シードを冪等化 or 明示リセット→再投入
    * 既に .onConflictDoNothing() と一意制約があるので、同じシードを複数回叩いても重複しないことを再確認。
    * 旧データが混在する環境向けに、「デモデータ再作成」＝リセット→シードを1クリックで実行できる手段も用意。
2. 一意制約の維持（既に定義済みの再確認）
    * products.sku 一意、locations.code 一意、 inventory_balances (productId, locationId, state) 複合一意、 replenishment_criteria (productId, locationId) 複合一意。
    * 画面で「店舗1が複数」など見た目の重複が出ないよう、セレクタは distinct＋コード順 表示。
3. ダッシュボードKPI・一覧が“実データで動く”
    * 書込み後は再取得／軽ポーリングで即反映。
    * 在庫少数アラートは SKU×場所の“通常在庫” vs “下限” で判定し、JOIN 多重で件数が膨らまないよう GROUP BY / DISTINCT を適切に使用。
    * 倉庫棚（A/B/C）は倉庫内合算で1件扱い、上位50件のみ表示＋総件数を別枠表示。店舗ロールは自店舗限定。
4. 在庫一覧の「明細」モーダル
    * 押下で SKU×場所の履歴（最新20件） を確実に表示。空なら空表示。

優先度3（UX／一連の業務を完成）
1. 販売管理の初期店舗選択を修正（重要）
    * 現状：Sales.tsx の selectedStore 初期値が「店舗1」（文字列ラベル）になっており、値が id 文字列と不一致。
    * 変更：最初の店舗の id 文字列（例："4"）を初期値にするか、"all" にして選択必須の導線にする。
    * これにより在庫サマリ・SKU選択・販売登録が開いてすぐ通る。
2. 出荷指示の体験
    * 左の少数アラート（自店舗）→行クリックでフォームに SKU／推奨数量（max(0, 基準−在庫)) を自動入力。
    * 作成後は未処理リストとダッシュボードの件数が増加。
3. 入出庫（出荷処理／受入／返品検品）
* 出荷確定：倉庫（通常 or 確保）減 → 店舗（通常）増 → 指示=完了 → 履歴1行。
* 受入→棚入れ：検品中へ加算 → 確定で通常／不良へ。
* 返品受入・検品：店舗送付分の検品中を受入 → 再販可=通常／不可=不良へ確定。
1. 右サイド「直近の履歴」
* ルート／タブに応じて types= で絞り込み、ページ遷移で再取得。
* 表示用の操作種別は統一語（例：「棚入れ」）。
1. 通知バッジの体験完成
* 未処理出荷指示件数を表示。クリックでドロップダウン一覧 → 行クリックで入出庫（出荷処理タブ）へ遷移。
* 未件時は明示メッセージ。

優先度4（運用の安定化）
1. デモデータ再作成（管理専用）
* 確認モーダル付きで「リセット→シード」を1クリック。
* 本番防止のフラグで開発・デモのみ有効。
1. 起動時の健全性チェック（任意）
* 主要テーブルの重複件数をログ出力し、0 以外なら警告（任意でUIバナー）。
1. 入力バリデーション
* 数量は0以上の整数、在庫減算は残在庫を下回らない。
* エラーメッセージは項目下＋ページ上部要約で明示。

受け入れ確認（この順で全合格）
1. ログイン → 必要に応じてシード実行。シードを2回叩いても重複が増えない（または「再作成」で再現性）。
2. ダッシュボード：KPI・一覧が実データで埋まり、カード／クイックアクション／通知ドロップダウンから正しく遷移。
3. 出荷指示（店舗）：少数アラート行クリック→フォームに SKU／推奨数量 自動入力→作成→未処理が増加。
4. 出荷確定（倉庫）：倉庫↓／店舗↑／指示=完了／履歴1行。不足時は明快エラー。
5. 販売（店舗）：初期店舗が選択済みで在庫サマリ表示→SKUクリック→登録→在庫↓／販売履歴（売上付）。
6. 顧客返品（店舗）：再販可→店舗・通常＋／不良→店舗・不良＋。
7. 店舗→倉庫返品送付（店舗）：正の数量・減算のみで通る。入出庫で検品中＋→検品確定で通常 or 不良＋。
8. 在庫一覧「明細」：SKU×場所の履歴20件がモーダル表示（空なら空表示）。
9. 重複の再発なし：場所・在庫残高・補充基準に二重行が増えない／「店舗1が複数」や過大な少数アラートが出ない。
